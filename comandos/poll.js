	const Discord = require('discord.js');
	const { MessageEmbed } = require('discord.js');
  const prompter = require('discordjs-prompter');

	exports.run = (bot,message,args) => {
if(!message.member.hasPermission("ADMINISTRATOR")) {
  message.lineReply('voc√™ precisa ser administrador para criar uma vota√ß√£o. ü§∑üèª‚Äç‚ôÇÔ∏è')
  } else {
    const titleEmbed = new MessageEmbed()
    .setAuthor("Kelle", bot.user.avatarURL())
    .setTitle("‚ô¶ - T√≠tulo da vota√ß√£o")
    .setColor(0x00AE86)
    .setTimestamp()
    .addField("üö© - STEP 1/6","Digite um t√≠tulo para a vota√ß√£o que deseja criar.")
    .setFooter("Criando uma vota√ß√£o")
    prompter
      .message(message.channel, {
        question: titleEmbed,
        userId: message.author.id,
        max: 1,
        timeout: 60 * 1000,
      })
      .then(responses => {
        // If no responses, the time ran out
        if (!responses.size) {
          return message.lineReply(`‚ùå | Cria√ß√£o da vota√ß√£o cancelada porque voc√™ demorou responder. :(`);
        }
        // Gets the first message in the collection
        const responseTitle = responses.first();

        // Respond
         const numberOptionsEmbed = new MessageEmbed()
    .setAuthor("Kelle", bot.user.avatarURL())
    .setTitle("üìä - Quantidade de op√ß√µes")
    .setColor(0x00AE86)
    .setTimestamp()
          .addField("‚ô¶ - T√≠tulo definido", "`" + `${responseTitle}` + "`")
    .addField("üö© - STEP 2/6", "Digite quantas op√ß√µes voc√™ quer em sua vota√ß√£o. (m√°ximo 2)")
    .setFooter("Criando uma vota√ß√£o")
    prompter
      .message(message.channel, {
        question: numberOptionsEmbed,
        userId: message.author.id,
        max: 1,
        timeout: 60 * 1000,
      })
      .then(responses => {
        // If no responses, the time ran out
        if (!responses.size) {
          return message.lineReply(`‚ùå | Cria√ß√£o da vota√ß√£o cancelada porque voc√™ demorou responder. :(`);
        }
        // Gets the first message in the collection
        const responseNumberOptions = responses.first();

        // Respond   
        numeroDeOpcoes = parseFloat(responseNumberOptions);
        const isOnlyNumbers = /^\d+$/.test(`${responseNumberOptions}`);

        if (numeroDeOpcoes < 2 || numeroDeOpcoes > 2 || isOnlyNumbers === false) {
            message.lineReply("‚ùå | Desculpe, mas o m√°ximo de op√ß√µes suportadas s√£o 2. (Ainda estou aprendendo a fazer novas op√ß√µes).")
        }

        
        if (numeroDeOpcoes == 2) {
         
          const optionsEmbed = new MessageEmbed()
          .setAuthor("Kelle", bot.user.avatarURL())
          .setTitle("1Ô∏è‚É£ - Texto da primeira op√ß√£o")
          .setColor(0x00AE86)
          .setTimestamp()
          .addField("‚ô¶ - T√≠tulo definido", "`" + `${responseTitle}` + "`")
          .addField("üìä - N√∫mero de op√ß√µes definido", "`" + numeroDeOpcoes + "`")
          .addField("üö© - STEP 3/6", "Digite o texto da 1¬™ primeira op√ß√£o.")
          .setFooter("Criando uma vota√ß√£o")
          prompter
            .message(message.channel, {
              question: optionsEmbed,
              userId: message.author.id,
              max: 1,
              timeout: 60 * 1000,
            })
            .then(responses => {
              // If no responses, the time ran out
              if (!responses.size) {
                return message.lineReply(`‚ùå | Cria√ß√£o da vota√ß√£o cancelada porque voc√™ demorou responder. :(`);
              }
              // Gets the first message in the collection
              const responseFirstOption = responses.first();

              // Respond
              const optionsEmbed2 = new MessageEmbed()
          .setAuthor("Kelle", bot.user.avatarURL())
          .setTitle("2Ô∏è‚É£ - Texto da segunda op√ß√£o")
          .setColor(0x00AE86)
          .setTimestamp()
          .addField("‚ô¶ - T√≠tulo definido", "`" + `${responseTitle}` + "`")
          .addField("üìä - N√∫mero de op√ß√µes definido", "`" + numeroDeOpcoes + "`")
          .addField("1Ô∏è‚É£ - Primeira op√ß√£o", "`" + `${responseFirstOption}` + "`")
          .addField("üö© - STEP 4/6", "Digite o texto da 2¬™ op√ß√£o.")
          .setFooter("Criando uma vota√ß√£o")
          prompter
            .message(message.channel, {
              question: optionsEmbed2,
              userId: message.author.id,
              max: 1,
              timeout: 60 * 1000,
            })
            .then(responses => {
              // If no responses, the time ran out
              if (!responses.size) {
                return message.lineReply(`‚ùå | Cria√ß√£o da vota√ß√£o cancelada porque voc√™ demorou responder. :(`);
              }
              // Gets the first message in the collection
              const responseSecondOption = responses.first();

              // Respond
              const channelEmbed = new MessageEmbed()
          .setAuthor("Kelle", bot.user.avatarURL())
          .setTitle("üì£ - Canal")
          .setColor(0x00AE86)
          .setTimestamp()
          .addField("‚ô¶ - T√≠tulo definido", "`" + `${responseTitle}` + "`")
          .addField("üìä - N√∫mero de op√ß√µes definido", "`" + numeroDeOpcoes + "`")
          .addField("1Ô∏è‚É£ - Primeira op√ß√£o", "`" + `${responseFirstOption}` + "`")
          .addField("2Ô∏è‚É£ - Segunda op√ß√£o", "`" + `${responseSecondOption}` + "`")
          .addField("üö© - STEP 5/6", "Em qual canal voc√™ quer criar essa vota√ß√£o? \n Obs: Digite `#` e mencione o canal.")
          .setFooter("Criando uma vota√ß√£o")
          prompter
            .message(message.channel, {
              question: channelEmbed,
              userId: message.author.id,
              max: 1,
              timeout: 60 * 1000,
            })
            .then(responses => {
              // If no responses, the time ran out
              if (!responses.size) {
                return message.lineReply(`‚ùå | Cria√ß√£o da vota√ß√£o cancelada porque voc√™ demorou responder. :(`);
              }
              // Gets the first message in the collection
              const responseChannel = responses.first();

              const idCanal = `${responseChannel}`
              idCanalFormatado = idCanal.replace('<#', "")
              idCanalFormatado2 = idCanalFormatado.replace(">", "")

              const isOnlyNumbers = /^\d+$/.test(idCanalFormatado2);

              if (isOnlyNumbers === false || !idCanal.includes("<#") && !idCanal.includes(">")) {
                message.lineReply("‚ùå | Erro! Canal digitado incorretamente, n√£o existe ou eu n√£o tenho permiss√£o para visualiz√°-lo.")
              } else {

                  
              const confirmationEmbed = new MessageEmbed()
          .setAuthor("Kelle", bot.user.avatarURL())
          .setTitle("‚ùì - Confirmar a cria√ß√£o")
          .setColor(0x00AE86)
          .setTimestamp()
          .addField("‚ô¶ - T√≠tulo definido", "`" + `${responseTitle}` + "`")
          .addField("üìä - N√∫mero de op√ß√µes definido", "`" + numeroDeOpcoes + "`")
          .addField("1Ô∏è‚É£ - Primeira op√ß√£o", "`" + `${responseFirstOption}` + "`")
          .addField("2Ô∏è‚É£ - Segunda op√ß√£o", "`" + `${responseSecondOption}` + "`")
          .addField("üì£ - Canal definido", `${responseChannel}`)
          .addField("üö© - STEP 6/6", "Confirmar a cria√ß√£o da vota√ß√£o? (sim/n√£o)")
          .setFooter("Criando uma vota√ß√£o")
          prompter
            .message(message.channel, {
              question: confirmationEmbed,
              userId: message.author.id,
              max: 1,
              timeout: 60 * 1000,
            })
            .then(async responses => {
              // If no responses, the time ran out
              if (!responses.size) {
                return message.lineReply(`‚ùå | Cria√ß√£o da vota√ß√£o cancelada porque voc√™ demorou responder. :(`);
              }
              // Gets the first message in the collection
              const responseConfirmation = responses.first();
              const confirmacao = `${responseConfirmation}`
              // Respond
              if (confirmacao == "sim" || confirmacao == "Sim") {

          
                  let channel = message.guild.channels.cache.get(idCanalFormatado2)
              var one = message.author.displayAvatarURL();
              var joined = one.replace(".webp", ".png?size=2048");
                  const votacao = new MessageEmbed()
                  .setAuthor(`Vota√ß√£o criada por ${message.author.username}`, joined)
                  .setTitle(`${responseTitle}`)
                  .addField(`1Ô∏è‚É£ - Op√ß√£o 1`, `${responseFirstOption}`)
                  .addField(`2Ô∏è‚É£ - Op√ß√£o 2`, `${responseSecondOption}`)
                  .setTimestamp()
                  .setFooter("Clique na rea√ß√£o referente √† sua escolha.")
                  .setColor(0x00AE86)

                  message.lineReply(`‚úÖ | Vota√ß√£o criada com sucesso! \nConfira o canal ${responseChannel}.`)
                  const msg = await channel.send(votacao).then( msg => {
                  msg.react('1Ô∏è‚É£')
                  msg.react('2Ô∏è‚É£')
                  }).catch(err => message.lineReply("‚ùå | N√£o consegui criar a vota√ß√£o no canal citado. Verifique se eu tenho permiss√£o de mandar mensagem ou reagir l√°."))

              }
              if (confirmacao == "n√£o" || confirmacao == "N√£o" || confirmacao == "nao" || confirmacao == "Nao") {
                message.lineReply("‚ùå | Cria√ß√£o da vota√ß√£o cancelada pelo usu√°rio.")
              }
              
            })

              }


            })
            })
        });
       
        }
         });
      });
    
    
    
    
    // const titleEmbed = new MessageEmbed()
    // .setAuthor("Kelle", bot.user.avatarURL())
    // .setTitle("üìä - T√≠tulo da vota√ß√£o")
    // .setColor(0x00AE86)
    // .setTimestamp()
    // .setDescription("Digite um t√≠tulo para a vota√ß√£o que deseja criar. \n\n Lembre-se: para cancelar a cria√ß√£o da vota√ß√£o, √© s√≥ mandar `cancelar`.")
    // .setFooter("Criando uma vota√ß√£o")

    // message.channel.send(titleEmbed)


    // if (message.content === "cancelar") {
    //   const cancel = new MessageEmbed()
    // .setAuthor("Kelle", bot.user.avatarURL())
    // .setTitle("üìä - Vota√ß√£o cancelada")
    // .setColor(0x00AE86)
    // .setTimestamp()
    // .setDescription("Cria√ß√£o de vota√ß√£o cancelada.")
    // .setFooter("Criando uma vota√ß√£o")

    // message.channel.send(cancel)
    // }
}





// 		if(!message.member.hasPermission("ADMINISTRATOR")) return message.lineReply('voc√™ precisa ser administrador para criar uma vota√ß√£o. ü§∑üèª‚Äç‚ôÇÔ∏è');
// 		if (args.length === 0 || message.content ===`.votacaosimples ${args[0]}` || message.content ===`.votacaosimples ${args[0]} ${args[1]}` || message.content === `.votacaosimples ${args[0]} ${args[1]} ${args[2]} ${args[3]} ${args[4]} ${args[5]} ${args[6]} ${args[7]}`) return message.lineReply("utilize **.votacaosimples <t√≠tuloDaVota√ß√£o> <op√ß√£o1> <op√ß√£o2>** \n Use (-) ou (_) para separar as palavras.");

// 	if(args[1] === args[2]) {
// 		message.lineReply('voc√™ n√£o pode por duas op√ß√µes iguais! ü§∑üèª‚Äç‚ôÇÔ∏è')
// 	}else {
// 		titulo = args[0].replace(/-/g, " ");
// 		opcao1 = args[1].replace(/-/g, " ");
// 		opcao2 = args[2].replace(/-/g, " ");
// 		const votacaosimples = new MessageEmbed()
// 		.setTitle(`Vota√ß√£o criada por ${message.author.username}`)
// 		.setColor('#77dd77')
// 		.setDescription(titulo)
// 		.addField('Op√ß√£o 1‚É£', opcao1)
// 		.addField('Op√ß√£o 2‚É£', opcao2)
// 		.setFooter('Vote clicando no emoji referente a op√ß√£o.');
// 		message.lineReply(votacaosimples).then(embedMessage =>{
// 			embedMessage.react('1‚É£');
// 			embedMessage.react('2‚É£');
// 		});
// 	//	message.lineReply('@everyone')
// 	}
  
//   if (message.guild.me.nickname === 'puta') {
//     if (!message.guild.me.hasPermission('MANAGE_NICKNAMES')) { message.lineReply('N√£o tenho permiss√£o pra mudar apelidos.')
// } else {
//     message.lineReply('Posso at√© n√£o ser humana mas tamb√©m tenho sentimentos, atitudes assim me deixam magoada. Acabei de resetar meu nickname.');
//     message.lineReply('<:kelle_cry:746498437809307690>')
//     message.guild.me.setNickname('Kelle');
// }
//   }

	}

exports.help = {
	name: ["poll", "votacao", "enquete"]
}